[{"authors":null,"categories":null,"content":"Hello world! Graduated from EPITA in 2021, I was able to travel into different companies, ecosystem, tech stacks and really find my way: Creating and enhancing solutions to answer company needs, I want to see beyond the code, how it will become part of the daily life of a company, for its consumers, for its customers and how it was brought to them.\nAs an engineer, the why is central to my approach and enriches myself with a lot of experiences and contexts but also allows me to re-think the needs and processes at its origin.\nDoes your company has a story to tell?\nDownload my resumé.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1678631484,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hello world! Graduated from EPITA in 2021, I was able to travel into different companies, ecosystem, tech stacks and really find my way: Creating and enhancing solutions to answer company needs, I want to see beyond the code, how it will become part of the daily life of a company, for its consumers, for its customers and how it was brought to them.","tags":null,"title":"Louis Holleville","type":"authors"},{"authors":["Louis Holleville"],"categories":["strategy"],"content":"The Agile methodology, through its different frameworks (XP, scrum, kanban, etc.), holds many promises.\nIndividuals and interactions over processes and tools\nWorking software over comprehensive documentation\nCustomer collaboration over contract negotiation\nResponding to change over following a plan\nThe great strength of agility lies in the incremental delivery of functionality whose customer feedback will allow adjustment as development progresses. By moving from a waterfall-type tunnel effect to continuous delivery, the client co-constructs the final solution. Excellent way, therefore, to ensure satisfaction of a product that we are partially creditable of its completion.\nThe Waterfall method Before agility, the Waterfall method was the most widespread one in project management. Simple to understand, it consists of emphasising the preparatory phase so that the implementation which follows only has to follow a path so marked that the execution and the result deviate only slightly from the plan.\nWaterfall workflow An example of a waterfall managed project could be the construction of a car as follows: we take the driver’s need, we design all the plans according to the driver’s dream car then we send the car into production to the factory. Once the car is produced, it is tested to ensure that it works properly and delivered to the customer. Finally, we will take care of maintaining the car throughout its lifespan with the customer.\nThe Waterfall method also presents some constraints:\nthe preparation phase being substantial, the arrival of changes along the way is impactful. the risk of the non-alignment of needs. As the requirement is only collected at the start of the project, its development is tunnel-based, costly and even more so if the result achieved miss the requirements. With our car example, here’s what could be failing:\nplans do not reflect a technical reality achievable in the factory. test cycles show technical or design failures that require backpedaling to previous stages. the customer wanted a city car and not an SUV. The agile alternative Agility, unlike the waterfall method, integrates customer needs throughout the development of the project. The initial phase of need analysis is shorter. The deliverables are also shipped more quickly, barely functional and gain consistency as iterations progress. The interest lies in taking feedback from customers and their needs in order to adjust as you go. This makes possible to optimize the entire production by providing exactly what is expected each time, no more no less.\nThe customer wants a car. The need is taken and synthesized, the teams begin to think about the design. The first drafts are presented to the client who specifies his expectations. The carcass is sent for assembly and the customer validates the structure. Now, the engine is added but upon inspection, the customer wants a more modest engine: the engine is changed. Ultimately, the customer obtains a completely assembled and functional car.\nLimits However, this promise is subject to the reality of the market and business. If deliveries have become periodic, it is also linked to the financing of the projects that has been staggered, subject to proof of satisfaction.\nMany companies distribute periodic budgets to their projects/departments. Their amount is based on previous, future or expected results. This also allows these budgets to be adjusted and not to have to tie up large sums of money (sometimes) unnecessarily.\nAnd from then on, this condition of satisfaction is transformed into a quest for approval. And this is where the shift can occur. We move away from the rational, and from the proposal to complete the project in the right order, to focus on the “wow”. If the stakeholder sees things that he likes, he validates. It doesn’t matter if it makes no sense in the production of the project, or worse, it doesn’t matter if it slows down/disrupts its smooth progress. And as the stakeholder is often involved, directly or indirectly, in the project budget, it is vital that he propagates a positive opinion.\nPositions of those who distribute the budgets are ejectable, one another. Credibility and longevity therefore depend on betting on the good horses.\nAnd agility is thus twisted. The door is wide open for the project manager to approach the PO with a new idea that will impress the stakeholders. Would the very vision of the project be compromised? No matter, now that the project manager knows that agility “welcomes” change. And then difficult for the PO to fight back with rational arguments because we must remember a second reality, the project manager very often has hierarchical ascendancy over it.\nWho has never heard a PO declaring a “NEW RULE!” ?\nNot all environments operate like this and cases where governance plays it alone are not the norm. But the more room there is for politics in business, the more agility becomes a weapon in this house of cards.\n","date":1704984900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1705441670,"objectID":"3f6d44f275e36ed6572139747c3f082a","permalink":"https://www.louis-holleville.fr/en/post/7-agility-distorded/","publishdate":"2024-01-11T14:55:00Z","relpermalink":"/en/post/7-agility-distorded/","section":"post","summary":"In a business context, agility is positioned as a disruptive methodology. Reorganize the relationship with product, iterate over deliveries, take customer feedback into account, rethink the organization of teams. So many promises whose solidity depends, inevitably, on those to whom it is to adopt.","tags":["agility","strategy","business"],"title":"Distorted agility","type":"post"},{"authors":["Louis Holleville"],"categories":["gitops"],"content":"GitOps is an approach to operational management that uses Git as the source of truth for infrastructure and the applications deployed on it. This method is based on the idea of versioning configuration files and infrastructure definitions in a Git repository, which serves as the single source of truth for all system components.\nThus, with GitOps, all changes to infrastructure or applications are made through changes to the Git repository, either manually or through automated processes. For example, when a developer makes a code change and pushes it to the Git repository, the GitOps deployment tool detects that change, builds the application, and automatically deploys it to the appropriate infrastructure. The state of the infrastructure is updated, taking this latest addition into account.\nThe advantages of GitOps are multiple and converge, in the DevOps movement, to rationalize processes while making them more accessible, more open:\nSingle source of truth: the GitOps being based on the versioning of the resources, it consists of the only reference of the state of the infrastructure. Not only are we reducing the human factor in knowing this infrastructure, but we are also simplifying its management and ensuring its consistency! Continuous integration: gitops goes perfectly with automation. We can thus draw the full power of the DevOps approach by extending the continuous deployment of applications with the continuous deployment of infrastructure. We increase the SLA, we perform precise, reliable and repeatable MEPs! Traceability: the code being versioned, we also exploit all the capacities to trace the changes, to control who can publish; a big plus for safety. Finally, like authentic developers, we provide the ability to revert changes in the code and therefore the infrastructure! Collaboration: one of the big challenges of the infrastructure is to get out of this fatality that the infrastructure is inaccessible to ordinary mortals. Now, the infrastructure is described on YAML (or other) in an (almost) readable way for humans and above all, centralized. It may be necessary to equip yourself with an infra-\u0026gt;English dictionary at first, but this change alone is a giant step! In more technical terms, there are a few tools that allow you to orchestrate turnkey GitOps in a Kubernetes application context. The two relevant tools in my opinion are:\nFluxCD: an open-source tool that deploys in server mode directly on the target cluster and allows you to define custom workflows. This tool is intended to be handled in CLI but is very light. ArgoCD: also open-source, the tool is very complete and a little more substantial to deploy (Helm is your friend). It is GUI oriented and allows a fine management of users allowing them to also have their hands on the management of the environment. I personally have a preference for the latter, I’ll let you figure out why. There are also other tools, or other methods of managing GitOps. Some involve a little rock\u0026amp;roll management of gitlabCI, GitHub Action and co. Others, like JenkinsX (Jenkins in the name) don’t necessarily appeal to me right now.\nIn conclusion, GitOps is a powerful tool for configuration management and continuous application deployment that offers a single source of truth, continuous automation, full visibility and traceability, efficient collaboration, and enhanced security. GitOps is a growing trend and for good reason: simplicity, speeding up deployments while reducing human error.\n","date":1680043800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680101784,"objectID":"804f233104ae557f9516fc369ee0ad51","permalink":"https://www.louis-holleville.fr/en/post/5-introduction-to-gitops/","publishdate":"2023-03-28T22:50:00Z","relpermalink":"/en/post/5-introduction-to-gitops/","section":"post","summary":"GitOps is an approach for managing Kubernetes infrastructure and applications that uses Git as the source of truth for configuration. Its main interest is to automate deployment processes, simplify collaboration between teams and reduce human errors thanks to a declarative approach to configuration.","tags":["gitops"],"title":"Discover GitOps!","type":"post"},{"authors":["Louis Holleville"],"categories":["Cloud Architecture"],"content":"A few days ago, I was able to attend a conference dealing with multi-cloud1. The very content of the presentation ultimately turned out to be just a wobbly pros/cons table about multi-cloud. In the end, the most interesting part was the question and answer session. As I was very skeptical about the speaker’s answers or even about his somewhat too enthusiastic posture for multi-cloud, I wanted to offer some feedback on this theme and give my position.\nMulti-cloud is not something desirable today.\nAnd I will start by recalling, as mentioned by the speaker, the benefits of multi-cloud:\nthe ability to bring competition into play when negociating/choosing services. That is all. And even this unique advantage can be discussed. Because in a context where just finding an infrastructure engineer is a long run, do we really want to waste this precious bandwidth on a multi-cloud? The only reason that can lead to an acceptable multi-cloud situation would be legacy, such as acquisition and merger. Otherwise, don’t go there voluntarily, because having to work on the lowest common denominator of different clouds would take us 10 years backward. The future of the cloud is in the managed, is in the vendor-locking.\nIt’s quite shocking to say, but let’s understand that the resources of ICTs are limited. So limited that investing the equivalent of a salary in a tool that would save man-months is the kind of leverage that ultimately allows you to effectively manage your budget. Let’s not be hesitant to engage deeply with a cloud-provider, whichever it is, because all the power of their solution really happens when fully used. And it’s not achievable here for multi-cloud. Very few companies are able to retail a painless lift\u0026amp;shift, quite the contrary. It saddens me even more that firms such as the presenter’s advise on this type of time-consuming infrastructure, and it is in their very interest.\nThe only thing multi-cloud can do is reinvent the wheel at your expense.\nWe are talking here about the use of 2 or more cloud providers for infrastructure and operational management. No hybrid fleet here. ↩︎\n","date":1670684100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1670759962,"objectID":"ad5823b200e57cf2b414534f3909cf83","permalink":"https://www.louis-holleville.fr/en/post/4-about-multicloud/","publishdate":"2022-12-10T14:55:00Z","relpermalink":"/en/post/4-about-multicloud/","section":"post","summary":"A few days ago, I was able to attend a conference about multi-cloud, feedback on its content and positioning.","tags":["cloud"],"title":"Quick note about multicloud","type":"post"},{"authors":[],"categories":null,"content":"As of today, Amazon Web Service is the most essential cloud service provider and with the largest market share. And rightly so, not only was it the first but also today the one with the most advanced panoply of service offers. And yet, it continues to innovate year after year. Re:Invent is THE annual AWS meeting you should remember. The effervescence of energy, technology and announcement only makes you want to do one thing: try them!\nUnfortunatly, the 2022 edition is already over… but was not left out with its multitude of exclusive announcements! Some have particularly interested me and I will come back to them in the coming weeks.\nA very special thank you to Lionel Suss, now SRE manager at WeMaintain, for all the rich discussions we had during this week about this event!\n","date":1669644e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1670493391,"objectID":"f0b87e32a6bb02e7d03e4b2bb6d43d76","permalink":"https://www.louis-holleville.fr/en/talk/aws-reinvent-2022/","publishdate":"2022-12-08T00:00:00Z","relpermalink":"/en/talk/aws-reinvent-2022/","section":"event","summary":"THE yearly conference of AWS!","tags":["AWS","re:Invent","cloud"],"title":"AWS Re:Invent 2022","type":"event"},{"authors":[],"categories":null,"content":"As you may know, I am now quite interested in the GitOps ecosphere and specifically the Argo Tooling suite since it was the one deployed at WeMaintain. I do not thing I will attend all of the meetings but It will be a good way to challenge my knowledge and believes about ArgoCD with ~the~ experts.\nI will make sure to publish a short article summing up my impressions afterwards !\n","date":1663601400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663006156,"objectID":"4ec3998bc77093755730f8cd1380fc4a","permalink":"https://www.louis-holleville.fr/en/talk/argocon-2022/","publishdate":"2022-04-09T00:00:00Z","relpermalink":"/en/talk/argocon-2022/","section":"event","summary":"I will be remotly attending ArgoCon this September!","tags":["GitOps","ArgoCD","ArgoCon"],"title":"ArgoCon 2022","type":"event"},{"authors":["Louis Holleville"],"categories":["Cloud Architecture"],"content":"The Cloud is a marvelous tool, the flexibility it gives us is of incomparable added value to the infrastructures of not so long ago. No more need to be predictive, anticipating needs, no more need for unfindable and overpriced CISCO experts. Why bother with so much knowledge and layers of knowledge when others can do it much better, in a shared and affordable way? Recently, I had the opportunity to work on the network aspects of our infrastructure at WeMaintain and to rediscover the huge range of tools offered by AWS to solve the least of our needs. But the experience was not as ergonomic as I might have expected. Should she have?\nThe dynamic of cloud players in recent years has been to make more and more services accessible, at a lower cost. Thus, a lot of infrastructure was born there and a lot of existing infrastructure migrated there. At the same time, access to its services has been simplified, making the appeal stronger and the user experience more engaging, in my opinion. In this dynamic, in 2022, I set out to want to create a [virtual private network (VPC)](https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc. html) in AmazonWebService (AWS) in order to test the possibility of creating an isolated zone of the Internet, access to which is only possible from a bastion and the purpose of which is to operate only services internal to our IS. In an ideal world, this VPC was only connected to the internet for the purposes of updating its components.\nInitial needs schema The reality of the execution was slightly different and that’s where we get to the heart of the matter. Even though access to these services has been simplified, their use has remained more or less the same. CICD, subnet, gateway but if all the keywords are not there, all the concepts remain the same. There is now even an additional layer: that of the cloud provider. By adding their interfacing to these network concepts, they have developed their own modules that meet their own rules and recommendations. Thus, a network expert must now also be a cloud network expert. The complexity rises when from Azure to AWS the names, the rules also change. And here we are with a whole new profession. Not that it’s embarrassing, because it covers much more needs with less competence, but that one would have expected that it does not exist at all.\nIndeed, I was greatly surprised when I myself had to implement network architectures based on basic needs. Creating a VPC isolated from the internet doesn’t seem so specific to me. Creating a VPC that cannot be accessed from the outside doesn’t seem like it to me either. And yet, it’s up to me to do the research, to document myself to accomplish this according to the standard of the cloud provider in question.\nWouldn’t we be at the peak of cloud and no-infrastructure? Because if a dynamic is clear, it is that of making the cloud so accessible that the only profession associated with it is “expert click-click AWS/Azure/etc”, if this were still to be a profession and not just a training.\nStill, my job as an engineer allowed me to get out of it in an afternoon. Can we go further?\nThe final form of my project’s infrastructure ultimately looks like this and I imagine it to be the standard, according to my research.\nFinal VPC schema It could even have been even more perfect if I hadn’t realized that players like GitHub1 didn’t yet manage IPv6 and if I hadn’t had to integrate an IPv4 layer despite it, I would have had a egress IPv6 only, which is damn sexy.\nIn the near future ?\nShame ↩︎\n","date":1662659700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663004465,"objectID":"c854153c95262e9b5144c882fd8bd80c","permalink":"https://www.louis-holleville.fr/en/post/2-aws-complexity/","publishdate":"2022-09-08T17:55:00Z","relpermalink":"/en/post/2-aws-complexity/","section":"post","summary":"Recently, I have been doing some exploration on AWS and I was able to experience the interaction of certain resources, notably the network. Most of my time was spent understanding how these resources interact, is that reasonable?","tags":["cloud","aws","wemaintain"],"title":"About the complexity of working with AWS resources","type":"post"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1662403140,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1662405490,"objectID":"4269bda71554ce06afc8549e8e330c86","permalink":"https://www.louis-holleville.fr/en/project/gitops-at-wemaintain/","publishdate":"2022-09-05T18:39:00Z","relpermalink":"/en/project/gitops-at-wemaintain/","section":"project","summary":"How the GitOps pattern can help WeMaintain's IT department ?","tags":["gitops","wemaintain"],"title":"GitOps at WeMaintain","type":"project"},{"authors":["Louis Holleville"],"categories":["DevSecOps"],"content":"Why not manage your IS like a business product? Consumers, customers, suppliers, MVPs, stakeholders, planning; the more I think about it, the more common notions I see.\nSo all we were missing would be the link between theory and practice?\nNot so much now: Infrastructure as Code, Network as Code, DevOps and now #gitops, all these concepts take shape through solutions such as Terraform, Istio, Ansible, Argo and many others. Put end to end, the evolution of an IS is now completely possible through the code, like a project as a whole, and can itself be subject to the automation of its deployment (So InfraOps?: p). The infrastructure becomes reactive. Cloud technologies now allow us great flexibility, we are no longer anticipating a few years but reacting to a few minutes. The infrastructure becomes apparent, malleable and can now closely follow business needs. Its operating processes are automatable and rationalizable, maximizing repeatability and reducing the human factor, the dream. CI over GitOps, canary and blue-green now even allow an automated delivery workflow, from the smallest integration to production. And most importantly, other people now have the opportunity to consult this “new” code, to contribute to it, to question it and to bring a fresh, naive, vital vision to it.\nHaving laid the first GitOps brick at WeMaintain last week, I am already delighted to see the growing confidence in our processes and I am impatient to be able to go even further. And, I must say, it’s a real pleasure to work in an environment that aims so far and gives itself the means to do so.\n","date":1661702400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663004795,"objectID":"b17913f99e201620c19d27bb84a0f009","permalink":"https://www.louis-holleville.fr/en/post/1-argocd-in-prod-wm/","publishdate":"2022-08-28T16:00:00Z","relpermalink":"/en/post/1-argocd-in-prod-wm/","section":"post","summary":"Why not manage your IS like a business product? Consumers, customers, suppliers, MVPs, stakeholders, planning; the more I think about it, the more common notions I see.\nSo all we were missing would be the link between theory and practice?","tags":["gitops","wemaintain"],"title":"ArgoCD in production at WeMaintain !","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1662302360,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://www.louis-holleville.fr/en/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/en/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]