<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Louis Holleville</title><link>https://www.louis-holleville.fr/fr/post/</link><atom:link href="https://www.louis-holleville.fr/fr/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>fr-fr</language><image><url>https://www.louis-holleville.fr/media/icon_hud7230873ec5b940f2123220bb748e78c_5271_512x512_fill_lanczos_center_3.png</url><title>Posts</title><link>https://www.louis-holleville.fr/fr/post/</link></image><item><title>L'agilité distordue</title><link>https://www.louis-holleville.fr/fr/post/7-agility-distorded/</link><pubDate>Thu, 11 Jan 2024 14:55:00 +0000</pubDate><guid>https://www.louis-holleville.fr/fr/post/7-agility-distorded/</guid><description>&lt;p>La méthodologie Agile, à travers ses différents framework (XP, scrum, kanban &amp;hellip;), est porteuse de plusieurs promesses. Et sans vous refaire les principes agiles, celui qui est à la fois sa force et sa plus grande faiblesse est:&lt;/p>
&lt;blockquote>
&lt;p>L&amp;rsquo;adaptation au changement plus que le suivi d&amp;rsquo;un plan&lt;/p>
&lt;/blockquote>
&lt;p>La grande force de l&amp;rsquo;agilité réside dans la livraison incrémentale de fonctionnalité dont le retour client va permettre l&amp;rsquo;ajustement au fur et à mesure du développement. En passant ainsi d&amp;rsquo;un effet tunnel type waterfall à une livraison continue, le client co-construit la solution finale. Excellent moyen, donc, d&amp;rsquo;assurer une satisfaction d&amp;rsquo;un produit dont nous sommes partiellement lauréat de son achèvement.&lt;/p>
&lt;p>Cependant, cette promesse papier est soumise à la réalité du marché et du business. Si les livraisons sont devenues régulières, c&amp;rsquo;est aussi parce que le financement des projets s&amp;rsquo;est aussi échelonné, sous réserve de preuve de satisfaction. Et ceux, peu importe le contexte, en prenant en exemple le financement de certains projets dans les départements de grandes entreprises.&lt;/p>
&lt;p>Et dès lors, cette condition de la satisfaction se transforme en quête de l&amp;rsquo;approbation. Et c&amp;rsquo;est ici que le glissement peut s&amp;rsquo;opérer. Nous sortons du rationnel, et de la proposition de mener le projet à terme dans le bon ordre, pour se concentrer sur la &amp;ldquo;waow&amp;rdquo;. Si le stakeholder voit des choses qui lui plaisent, il valide. Peu importe si cela ne fait aucun sens dans la production du projet, ou pire, peu importe si cela ralentit/perturbe son bon déroulement. Et comme le stakeholder est souvent impliqué, de près ou de loin, dans le budget du projet, il est vital qu&amp;rsquo;il propage un avis positif.&lt;/p>
&lt;p>Et l&amp;rsquo;agilité s&amp;rsquo;en retrouve ainsi tordue. La porte est grande ouverte pour que le chef du projet se rapproche du PO avec une nouvelle idée qui va impressionner les stakeholders. La vision même du projet s&amp;rsquo;en trouverait compromises ? Peu importe, maintenant que le chef de projet sait que l&amp;rsquo;agilité accueille &amp;ldquo;volontier&amp;rdquo; le changement.
Et difficile ensuite pour le PO de revenir à la charge avec des arguments rationnels car il faut rappeler d&amp;rsquo;une deuxième realité, le chef de projet a, très souvent, l&amp;rsquo;ascendant hiérarchique dessus.&lt;/p>
&lt;p>Tous les milieux ne fonctionnent pas comme cela et les cas où la gouvernance joue cavalier seul ne sont pas généralité. Mais plus il y a de la place pour la politique en entreprise, plus l&amp;rsquo;agilité devient une arme dans cette guerre de pouvoir.&lt;/p></description></item><item><title>Découvrez le GitOps !</title><link>https://www.louis-holleville.fr/fr/post/5-introduction-to-gitops/</link><pubDate>Tue, 28 Mar 2023 22:50:00 +0000</pubDate><guid>https://www.louis-holleville.fr/fr/post/5-introduction-to-gitops/</guid><description>&lt;p>Le GitOps est une approche de la gestion opérationnelle qui utilise Git comme source de vérité pour l&amp;rsquo;infrastructure et les applications qui y sont déployées. Cette méthode repose sur l&amp;rsquo;idée de versionner des fichiers de configuration et les définitions d&amp;rsquo;infrastructure dans un référentiel Git, qui sert de source unique de vérité pour tous les composants du système.&lt;/p>
&lt;p>Ainsi, avec le GitOps, toutes les modifications apportées à l&amp;rsquo;infrastructure ou aux applications sont effectuées via des modifications du référentiel Git, que ce soit manuellement ou au travers de processus automatisés. Par exemple, lorsqu&amp;rsquo;un développeur effectue une modification de code et la pousse sur le référentiel Git, l&amp;rsquo;outil de déploiement GitOps détecte cette modification, construit l&amp;rsquo;application et la déploie automatiquement sur l&amp;rsquo;infrastructure appropriée. L&amp;rsquo;état de l&amp;rsquo;infrastructure est mis à jour, tenant en compte ce dernier ajout.&lt;/p>
&lt;p>Les avantages de GitOps sont multiples et convergent, dans la mouvances DevOps, à rationnaliser les processus tout en les rendant plus accessible, plus ouverts:&lt;/p>
&lt;ul>
&lt;li>Source unique de vérité: le GitOps se basant sur le versionnement des ressources, il consistue l&amp;rsquo;unique référence de l&amp;rsquo;état de l&amp;rsquo;infrastructure. Non seulement on réduit le facteur humain dans la connaissance de cette infrastructure, mais en plus on en simplifie la gestion et on en assure la cohérence!&lt;/li>
&lt;li>Intégration continue: le gitops se marrie parfaitement avec l&amp;rsquo;automatisation. On peut ainsi tirer toute la puissance de l&amp;rsquo;approche DevOps en prolongeant le déploiement continu applicatif avec le déploiement continu d&amp;rsquo;infrastructure. On augmente la SLA, on effectue des MEP précises, fiables et répétables!&lt;/li>
&lt;li>Tracabilité: le code étant versionné, on exploite également toute les capacités à tracer les changements, à maitrise qui peut publier; un gros atout pour la sécurité. Enfin, tel d&amp;rsquo;authentiques dévelopeurs, on mets à disposition la capacité à revert des changements dans le code et donc l&amp;rsquo;infrastructure !&lt;/li>
&lt;li>Collaboration: un des gros enjeux de l&amp;rsquo;infrastructure est de sortir de cette fatalité que l&amp;rsquo;infrastructure est inaccessible au commun des mortels. Désormais, l&amp;rsquo;infrastructure est décrite sur YAML (ou autre) de manière (presque) lisible pour l&amp;rsquo;humain et surtout, centralisée. Il faudra peut-être s&amp;rsquo;équiper d&amp;rsquo;un dictionnaire infra-&amp;gt;français dans un premier temps mais rien que ce changement est un pas de géant!&lt;/li>
&lt;/ul>
&lt;p>En termes plus techniques, il existe quelques outils qui permettent d&amp;rsquo;orchestrer clés-en-main du GitOps dans un contexte applicatif Kubernetes. Les deux outils pertinents selon moi sont:&lt;/p>
&lt;ul>
&lt;li>FluxCD: un outil open-source qui se déploie en mode serveur sur le cluster cible directement et qui permet de définir des workflows personnalisés. Cet outil est destiné pour être manipulé en CLI mais est très léger.&lt;/li>
&lt;li>ArgoCD: également open-source, l&amp;rsquo;outil est très complet et un peu plus conséquent à deployer (Helm est votre ami). Il est orienté GUI et permet une gestion fine des utilisateurs permettant à ces derniers d&amp;rsquo;avoir eux aussi la main sur la gestion d&amp;rsquo;environnement. J&amp;rsquo;ai personnellement une préférence pour ce dernier, je vous laisserai chercher pourquoi.&lt;/li>
&lt;/ul>
&lt;p>Il existe également d&amp;rsquo;autres outils, ou d&amp;rsquo;autre méthodes de gérer du GitOps. Certains impliquent une gestion un peu rock&amp;amp;roll de gitlabCI, GitHub Action et cie . D&amp;rsquo;autres, comme JenkinsX (Jenkins dans le nom) ne m&amp;rsquo;attirent pas forcément pour l&amp;rsquo;instant.&lt;/p>
&lt;p>En conclusion, le GitOps est un outil puissant pour la gestion de la configuration et le déploiement continu des applications, qui offre une source unique de vérité, une automatisation continue, une visibilité et une traçabilité complètes, une collaboration efficace et une sécurité renforcée. Le GitOps est une tendance en forte croissance et à raison: simplicité, accélération des déploiements tout en réduisant les erreurs humaines.&lt;/p></description></item><item><title>Une note sur le multicloud</title><link>https://www.louis-holleville.fr/fr/post/4-about-multicloud/</link><pubDate>Sat, 10 Dec 2022 14:55:00 +0000</pubDate><guid>https://www.louis-holleville.fr/fr/post/4-about-multicloud/</guid><description>&lt;p>Il y a quelques jours, j&amp;rsquo;ai pu assister à une conférence dont le sujet traitait du multi-cloud&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Le contenu même de la présentation ne s&amp;rsquo;est finalement révélé n&amp;rsquo;être qu&amp;rsquo;un tableau pros/cons bancal sur le multi-cloud. Finalement, la partie la plus intéressante aura été la séance de question-réponse. Comme j&amp;rsquo;ai été très sceptique sur les réponses de l&amp;rsquo;intervenant ou même sur sa posture un peu trop enthousiaste pour le multi-cloud, je souhaitais faire quelques retours sur cette thématique et donner ma position.&lt;/p>
&lt;p>Le multi-cloud n&amp;rsquo;est pas aujourd&amp;rsquo;hui quelque chose de souhaitable.&lt;/p>
&lt;p>Et je vais commencer par rappeler, tels mentionnés par l&amp;rsquo;intervenant, les bénéfices du multi-cloud :&lt;/p>
&lt;ul>
&lt;li>la capacité à faire jouer la concurrence sur les services négociés.
Et c&amp;rsquo;est tout.
Et même sur cet unique avantage, nous pouvons en rediscuter, car dans un contexte où juste trouver un ingénieur infrastructure est un parcours du combattant, souhaitons nous vraiment dilapider cette précieuse bande passante sur un multi-cloud ?&lt;/li>
&lt;/ul>
&lt;p>La seule raison qui peut mener à une situation de multi-cloud acceptable serait le legacy, comme par exemple l&amp;rsquo;acquisition et fusion. Autrement, n&amp;rsquo;y allez pas volontairement, car devoir travailler sur le plus petit dénominateur en commun de différents clouds nous ferait faire un retour en arrière de 10 ans.
L&amp;rsquo;avenir du cloud est dans le managé, est dans le vendor-locking.
C&amp;rsquo;est assez choquant à dire, mais comprenons que les ressources des DSI sont limitées. A tel point qu&amp;rsquo;investir l&amp;rsquo;équivalent d&amp;rsquo;un salaire dans un outil qui économiserait des mois-hommes est le genre de levier qui permet, en définitive, de gérer efficacement son budget. Ne soyons pas frileux de nous engager profondément avec un fournisseur, quels qu&amp;rsquo;il soit, car toute la puissance de leur solution prend vraiment sens quand on se donne la peine de les utiliser pleinement. Et ce n&amp;rsquo;est pas achevable ici pour le multi-cloud. Très peu d&amp;rsquo;entreprises sont capable de revendiquer un lift&amp;amp;shift indolore, bien au contraire.
Cela me désole d&amp;rsquo;autant plus que des cabinets tels que celui du présentateur font conseil sur ce type d&amp;rsquo;infrastructure chronophage, et c&amp;rsquo;est bien dans leur intérêt.&lt;/p>
&lt;p>La seule chose achevable par le multi-cloud est de réinventer la roue à vos frais.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On parle ici de l&amp;rsquo;utilisation de 2 fournisseurs cloud ou plus pour la gestion d&amp;rsquo;infrastruction, d&amp;rsquo;opérationel. Il n&amp;rsquo;est pas question de parc hybride ici.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>A propos de la complexité d'utilisation des ressources AWS</title><link>https://www.louis-holleville.fr/fr/post/2-aws-complexity/</link><pubDate>Thu, 08 Sep 2022 17:55:00 +0000</pubDate><guid>https://www.louis-holleville.fr/fr/post/2-aws-complexity/</guid><description>&lt;p>Le Cloud est un outil merveilleux, la flexibilité qu&amp;rsquo;il nous donne est d&amp;rsquo;une plus-value incomparable aux infrastructures d&amp;rsquo;il n&amp;rsquo;y a pas si longtemps. Plus besoin d&amp;rsquo;être dans le prédictif, dans l&amp;rsquo;anticipation du besoin, plus besoin d&amp;rsquo;expert CISCO introuvables et hors de prix. Pourquoi s&amp;rsquo;encombrer d&amp;rsquo;autant de savoir et de couches de savoir quand d&amp;rsquo;autres peuvent le faire bien mieux, de manière mutualisée et abordable ?
Récemment, j&amp;rsquo;ai eu l&amp;rsquo;occasion de travailler sur les aspects réseaux de notre infrastructure à &lt;a href="https://wemaintain.com" target="_blank" rel="noopener">WeMaintain&lt;/a> et de redécouvrir l&amp;rsquo;énorme palette d&amp;rsquo;outil proposé par AWS pour résoudre le moindre de nos besoins. Mais l&amp;rsquo;expérience n&amp;rsquo;a pas été aussi ergonomique qu&amp;rsquo;à ce que j&amp;rsquo;aurai pu m&amp;rsquo;y attendre. L&amp;rsquo;aurait-elle due?&lt;/p>
&lt;p>La dynamique des acteurs cloud ces dernières années a été de rendre de plus en plus de services accessibles, à moindre coût. Ainsi, beaucoup d&amp;rsquo;infra y ont vu naissance et beaucoup d&amp;rsquo;existante y ont migré. Parralèlement, l&amp;rsquo;accès à ses services s&amp;rsquo;est simplifié, rendant l&amp;rsquo;attrait plus fort et l&amp;rsquo;expérience utilisateur plus engageante, selon moi. Dans cette dynamique, en 2022, je me suis attelé à vouloir créer un &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html" target="_blank" rel="noopener">réseau virtuel privé (VPC)&lt;/a> dans AmazonWebService (AWS) afin de tester la possibilité de créer une zone isolée d&amp;rsquo;internet, dont l&amp;rsquo;accès n&amp;rsquo;est possible que depuis un bastion et dont le but est d&amp;rsquo;opérer uniquement des services internes à notre SI. Dans un monde idéal, ce VPC n&amp;rsquo;était connecté à internet que pour les besoins de mises à jour de ses composants.&lt;/p>
&lt;p>
&lt;figure id="figure-initial-needs-schema">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://www.louis-holleville.fr/fr/post/2-aws-complexity/vpc-commons-needs.png" alt="Initial VPC needs" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Initial needs schema
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>La réalité de l&amp;rsquo;exécution a été légèrement différente et c&amp;rsquo;est la que nous rentrons dans le vif du sujet. Quand bien même l&amp;rsquo;accès à ces services s&amp;rsquo;est simplifié, leur usage est resté à peu près le même. CICD, sous-réseau, gateway mais si tout les mots-clés n&amp;rsquo;y sont pas, l&amp;rsquo;ensemble des notions restent le même. Il y a même désormais une couche supplémentaire: celle du provider cloud. En ajoutant leur interfacage sur ces concepts réseaux, ils ont développé leurs propres modules qui répondent à leurs propres règles et recommandations. Ainsi, un expert réseau se doit désormais d&amp;rsquo;être aussi un expert réseau cloud. La complexité monte quand d&amp;rsquo;Azure à AWS les noms, les règles changent également. Et nous voilà avec une toute nouvelle profession. Non pas que cela soit gênant, car elle couvre bien plus de besoin avec moins de compétente, mais qu&amp;rsquo;on aurait pu s&amp;rsquo;attendre à ce qu&amp;rsquo;elle n&amp;rsquo;existe pas du tout.&lt;/p>
&lt;p>En effet, j&amp;rsquo;ai été fortement étonné quand j&amp;rsquo;ai eu, moi-même, à mettre en application des architectures réseaux basées sur des besoins basiques. Créer un VPC isolé d&amp;rsquo;internet ne me semble pas si spécifique. Créer un VPC dont l&amp;rsquo;accès depuis l&amp;rsquo;extérieur est impossible ne me le semble pas non plus. Et pourtant, c&amp;rsquo;est à moi de faire les recherches, de me documenter pour accomplir cela selon le standard du provider cloud en question.&lt;/p>
&lt;p>Ne serait-on donc pas encore à l&amp;rsquo;apogée du cloud et du no-infrastructure ? Car si une dynamique est claire, c&amp;rsquo;est bien celle de rendre le cloud si accessible que le seul métier qui y soit associé soit &amp;ldquo;expert clic-clic AWS/Azure/etc&amp;rdquo;, si cela devait encore être un métier et pas juste une formation.&lt;/p>
&lt;p>Toujours est-il que mon métier d&amp;rsquo;ingénieur m&amp;rsquo;a permis de m&amp;rsquo;en tirer en une après-midi. Peut-on aller plus loin?&lt;/p>
&lt;p>Le schéma final de l&amp;rsquo;infrastructure de mon projet ressemble finalement à cela et je l&amp;rsquo;imagine être le standard, selon mes recherches.&lt;/p>
&lt;p>
&lt;figure id="figure-final-vpc-schema">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://www.louis-holleville.fr/fr/post/2-aws-complexity/vpc-commons.png" alt="Final VPC schema" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Final VPC schema
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>Il aurait même pu être encore plus parfait si je ne m&amp;rsquo;étais pas rendu compte que des acteurs tels GitHub&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> ne gérait pas encore l&amp;rsquo;IPv6 et si je n&amp;rsquo;avais pas eu à intégrer une couche IPv4 en dépit, j&amp;rsquo;aurai eu un egress IPv6 only, ce qui est vachement sexy.&lt;/p>
&lt;p>Dans un futur proche ?&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://github.com/community/community/discussions/10539" target="_blank" rel="noopener">Shame&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>ArgoCD en production chez WeMaintain !</title><link>https://www.louis-holleville.fr/fr/post/1-argocd-in-prod-wm/</link><pubDate>Sun, 28 Aug 2022 16:00:00 +0000</pubDate><guid>https://www.louis-holleville.fr/fr/post/1-argocd-in-prod-wm/</guid><description>&lt;p>Pourquoi ne pas gérer son SI tel un produit métier ?
Consommateurs, clients, fournisseurs, MVP, stakeholders, planification; plus j’y réfléchis et plus j’y vois de notions communes.&lt;/p>
&lt;p>Tout ce qui nous manquait serait donc le lien entre la théorie et la pratique ?&lt;/p>
&lt;p>Plus tellement désormais: Infrastructure as Code, Network as Code, DevOps et maintenant #gitops, tous ces concepts prennent forme au travers de solutions telles Terraform, Istio, Ansible, Argo et tant d’autres.
Mis bout-à-bout, l’évolution d’un SI est désormais complètement possible au travers du code, comme un projet dans son ensemble, et peut lui-même être sujet à de l’automatisation de son déploiement (InfraOps donc? :p). L’infrastructure devient réactive. Les technologies cloud nous permettent désormais une grande flexibilité, nous ne sommes plus dans l’anticipation à quelques années mais dans la réaction à quelques minutes. L’infra devient apparente, malléable et peut désormais suivre de prêt les besoins métiers.
Ses processus d’exploitation sont automatisables et rationalisables, en maximisant la répétabilité et réduisant le facteur humain, le rêve. CI over GitOps, canary et blue-green permettent même désormais un workflow de livraison automatisé, de la plus petite intégration à la mise en prod.
Et le plus important, d’autres personnes ont désormais cette possibilité de consulter ce “nouveau” code, d’y contribuer, de le questionner et d’y apporter une vision fraîche, naïve, vitale.&lt;/p>
&lt;p>Ayant posé la première brique GitOps à WeMaintain la semaine dernière, je me réjouis déjà de constater la confiance grandissante dans nos process et suis impatient de pouvoir aller encore plus loin. Et, je dois dire, c’est un réel plaisir de travailler dans un milieu qui vise aussi loin et s’en donne les moyens.&lt;/p></description></item></channel></rss>